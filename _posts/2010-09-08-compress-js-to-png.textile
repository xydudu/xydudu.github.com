---
layout: default
title: Compress JS to PNG
---

首先这是属于奇淫巧技，只做研究，不必认真。当然也不能排除其可能的小宇宙。

这里要说的是把JS压缩为一张PNG图片，极度变态的减小JS的体积。原理简单来说就是两步：
    * 把JS文件用 **php** 、**python** 等压缩成二进制的图片（PNG格式为压缩比最好的图片格式）
    * 利用 **canvas** 的 **drawImage**，和 **getImageData** 方法把二进制的图片还原成JS源码

h3. 利用PHP压缩JS文件为二进制PNG图片

"Cal Henderson":http://www.iamcal.com/png-store/ 公布了他在这方面的研究，并可以 "github":http://github.com/iamcal/PNGStore 上找到其相关代码。因为我只对PHP熟悉，所以我只用了其中的一个文件 "bake.php":http://github.com/iamcal/PNGStore/blob/master/bake.php

修改一下代码：

{% highlight php linenos %}
    <?php
        encode_file('x.js', 'x');
        //改成你要转换的js文件，和文件名
{% endhighlight %}

哦，还有生成的图片的文件夹你也改一下吧。。这个文件会生成很多的图片，作者是个有耐心的人，每种转换方法都生成测试了一下，我则要偷懒很多，直接在里面选了个小的可以用的，大概就是文件名后缀 **_ascii_24b_square.png**，当然你也可以每一个图片都测试下的。

现在得到了一张PNG图片，开始解码吧！

{% highlight javascript linenos %}
    var 
    //创建一个canvas，并取得其可操作的画布对象
    canvas = document.createElement("canvas"),
    ctx = canvas.getContext("2d");
    //创建一个图片，用来load那张JS转换后的PNG图片
    img = new Image();

    //下面几行是为了在页面上看不到这个图片
    img.style.position = "absolute";
    img.style.left = "-10000px";
    document.body.appendChild(img);

    //图片加载完后开始解压操作
    img.onload = function() {
        var 
        w = this.offsetWidth,
        h = this.offsetHeight;

        canvas.width = w;
        canvas.height = h;
        canvas.style.width = w+"px";
        canvas.style.height = h+"px";
       
        //把图片渲染到画布中
        ctx.drawImage(this, 0, 0);

        var 
        //取得已渲染画布的数据
        data = ctx.getImageData(0, 0, w, h).data,
        a = [],
        len = data.length,
        p = -1;
        
        //遍例获得的数据，筛选需要的数据
        for (var i=0; i<len; i+=4) {
            if (data[i] > 0)
                a[++p] = String.fromCharCode(data[i]);
        };
        
        //执行JS
        eval(a.join(""));
        
        //移除图片
        document.body.removeChild(img);
    };
    //这里设定图片的地址
    img.src = 'x.png';
{% endhighlight %}

这个压缩量确实还蛮大的，我把一个100K的JS文件压到了30K。关于节约掉70K的体积会有什么好处，已经解压带来的时间性能问题，这是需要权衡的。

还有一个悲剧的情况是，IE9下是不支持的，IE9有没有问题我不知道，没装。看网上讨论，估计是有的。

用 **firefox** 或者 **chrome** 打开 "demos":http://xydudu.com/index-png.html 然后查看源码吧！

h3. 参考资料

* "Compress CSS and JavaScript Using PNGs and Canvas":http://www.sitepoint.com/blogs/2010/09/07/compress-css-javascript-png-canvas/
* "PNGStore - Embedding compressed CSS & JavaScript in PNGs":http://www.iamcal.com/png-store/

好了，就这样吧。。。谨做记录
