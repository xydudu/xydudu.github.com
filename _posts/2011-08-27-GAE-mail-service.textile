---
layout: default
title: GAE mail service
---

周末，阳光大好，不想出门，胡乱吃点东西，咖啡已喝，音箱打开，It's time to coding。


我需要一个mail service，显然，在无特别要求（GAE mail service is not support custom mail domain）的情况下，我采用一个云端服务在效率与稳定性上要先说些，于是我选择了GAE，因为我要做的应用不但需要发邮件还需要收邮件，而amazon mail service好像只支持发邮件。

OK，打开 "Google App Engine":http://code.google.com/appengine/ 然后 get start。利用自己仅有的python基础，一步一步的来吧。 

h3. 构建一个发邮件的页面

首页需要一个页面来进行发邮件的操作，一个简单的表单足矣，写一个名为 index.html 的模板里面展示一个form，python代码如下：

{% highlight python linenos %}

class Index( webapp.RequestHandler ):

    def get( self ):
        """ index"""
        directory = os.path.dirname( __file__ )
        path = os.path.join( directory, 'index.html' )
        rendered = template.render( path, {} )

        self.response.out.write( rendered )

{% endhighlight %}

截图如下：
!http://blog.xydudu.com/css/images/2011-08-27-1.jpg!

h3. 捕获表单数据并发送邮件

表单好了，要实现的是填写好邮箱地址，名字，邮件内容，点击 send 后就实现发邮件的操作。

OK，这是一个 POST 请求。利用 webapp.RequestHandler 的 request 方法获取到 email址，name，及内容，就可以用 GAE mail service API 发送了，代码如下：

{% highlight python linenos %}
    
    def post( self ):
        directory = os.path.dirname( __file__ )
        values = dict( ( k, cgi.escape( self.request.get(k) ) ) for k in ( 'content',
                                                                           'selfname' ))
        if not values[ 'selfname' ].strip():
            self.handle_error('What is your name?')
            return
        #send
        try:
            message = mail.EmailMessage( sender = EMAIL_FOR_SEND,
                                   to = self.request.get( 'email' ),
                                   subject = 'Hey, Just reply! ' )

            message.reply_to = 'your real email address'
            message.body = values[ 'content' ]
            message.check_initialized()

        except mail.InvalidEmailError:
            self.handle_error('Invalid email recipient.')
            return
        except mail.MissingRecipientsError:
            self.handle_error('You must provide a recipient.')
            return
        except mail.MissingBodyError:
            self.handle_error('You must provide a mail format.')
            return

        message.send()

{% endhighlight %}
