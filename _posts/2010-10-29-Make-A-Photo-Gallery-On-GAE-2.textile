---
layout: default
title: Make A Photo Gallery On GAE (2) --- Resize Photos And List Them 
---

h3. 生成缩略图 

前面简单的实现了上传的功能，接着来处理图片，使其更好的展示出来。首先是搞清楚如何生成比例合适的缩略图。
引入GAE提供的 **Image** 模块，查看文档： "The Image Class":http://code.google.com/appengine/docs/python/images/imageclass.html#Image 
我们需要用到的是 **resize()** 方法，改写前面的代码：

{% highlight python linenos %}
    
    # 增加一个字段存放缩略图
    class Photos(db.Model):
        photo = db.BlobProperty()
        thumbnail = db.BlobProperty()

    # 把经过resize后的图片存入thumbnail中
    p.thumbnail = db.Blob(images.resize(img, 72, 72))

{% endhighlight %}

显示缩略图与显示原图一样的原理，运用前面的Image，修改一下，传入size为 “S” 时显示thumbnail里的内容便可。

这里只是简单的用resize缩小了图片的尺寸，虽然images模块够智能，但还是不合我的要求，我需要生成一张长和宽都为72的正方形缩略图，多余的切除，且尽可能的显示更多的信息。
继续查文档，发现了 *crop(left_x, top_y, right_x, bottom_y)* 方法，应该有用。

*resize* 方法是将图片自动缩小到指定的大小，需传入width，height。然后取最大边来按比例缩小，而我的需求是要生成一张正方形的缩略图，则需要 *crop* 的帮助。

*crop* 是剪切图片的一个方法，有四个参数 *left_x* , *top_y* , *right_x* , *bottom_y* ，值为0.0到1.0之间。
也就是crop生成一个边框，边框的边宽由四个参数指定，然后剪切出中间部分。

下面是我的一个步骤：
    * 用resize方法获得一张最小边为72的图片
    * 用corp剪切为边长为72的图片(切中间部分)

下面是相应的代码：

{% highlight python linenos %}
        
        def square(self, size, data):
            img = images.Image(data)
            w, h = (img.width, img.height)
            a = w/size if h>w else h/size
            new_w, new_h = (w/a, h/a)
            img.resize(int(new_w), int(new_h))
            left_x = float(new_w - size)/2
            top_y = float(new_h - size)/2
            right_x = float(new_w) - left_x
            bottom_y = float(new_h) - top_y
            img.crop(left_x/new_w, top_y/new_h, right_x/new_w, bottom_y/new_h)
            return img.execute_transforms(output_encoding=images.JPEG)

{% endhighlight %}

注意： python的除法，默认是整除，可能会有点不精确，在文件的顶部加入：

{% highlight python linenos %}

    from __future__ import division

{% endhighlight %}

现在就得到了想要的边长为72的正方形缩略图。加一些样式，使其好看些吧。
